{"version":3,"sources":["components/pages/About.js","components/pages/Contact.js","components/pages/Portfolio.js","components/Navbar.js","components/PortfolioContainer.js","App.js","serviceWorker.js","index.js","GrecoResume.pdf"],"names":["About","className","id","src","alt","Component","Contact","Portfolio","Navbar","props","name","target","href","data-target","onClick","handlePageChange","Resume","rel","PortfolioContainer","state","currentPage","componentDidMount","setState","page","renderPage","this","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"kOAoCeA,E,iLA9BP,OAEI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,4BAA4BC,GAAG,cAC1C,yBAAKD,UAAU,cACX,yBAAKE,IAAI,oEAAoED,GAAG,cAAcE,IAAI,QAC9F,0BAAMH,UAAU,aAAaC,GAAG,YAAhC,aAEJ,yBAAKD,UAAU,gBACX,wsB,GAfhBI,aCWLC,E,iLAPP,OAEI,2C,GANUD,aCWPE,E,iLAPP,OAEI,6C,GANYF,a,gBCmCTG,MAlCf,SAAgBC,GAEZ,OAEI,yBAAKR,UAAU,gBACX,wBAAIC,GAAG,YAAYD,UAAU,oBACzB,4BAAI,uBAAGS,KAAK,QAAQT,UAAU,wCAA1B,aACJ,wBAAIA,UAAU,YACd,4BAAI,uBAAGS,KAAK,YAAYT,UAAU,wCAA9B,cACJ,wBAAIA,UAAU,YACd,4BAAI,uBAAGS,KAAK,UAAUT,UAAU,wCAA5B,YACJ,wBAAIA,UAAU,YACd,4BAAI,uBAAGS,KAAK,SACRT,UAAU,uCAAuCU,OAAO,UADxD,YAGR,6BACI,yBAAKV,UAAU,+BACX,uBAAGA,UAAU,oBAAoBC,GAAG,YAApC,cACA,wBAAID,UAAU,8BACV,4BAAI,uBAAGA,UAAU,mBAAmBW,KAAK,KAAKC,cAAY,aAAtD,OAAsE,uBACtEZ,UAAU,wBAD4D,sBAG9E,wBAAIA,UAAU,4BACV,4BAAI,uBAAGW,KAAK,IAAIE,QAAS,kBAAML,EAAMM,iBAAiB,eAAlD,cACJ,4BAAI,uBAAGH,KAAK,IAAIE,QAAS,kBAAML,EAAMM,iBAAiB,aAAlD,YACJ,4BAAI,uBAAGH,KAAMI,IAAQL,OAAO,SAASM,IAAI,uBAArC,gBCWXC,E,2MAhCbC,MAAQ,CACNC,YAAa,I,EAGfC,kBAAoB,kBAAM,EAAKC,SAAS,CAAEF,YAAa,W,EAEvDL,iBAAmB,SAAAQ,GACjB,EAAKD,SAAS,CAAEF,YAAaG,K,EAG/BC,WAAa,WACX,MAA+B,UAA3B,EAAKL,MAAMC,YACN,kBAAC,EAAD,MAC6B,cAA3B,EAAKD,MAAMC,YACb,kBAAC,EAAD,MAC6B,YAA3B,EAAKD,MAAMC,YACb,kBAAC,EAAD,WADF,G,wEAMP,OACE,6BACE,kBAAC,EAAD,CACAL,iBAAkBU,KAAKV,mBAEtBU,KAAKD,kB,GA3BiBnB,aCIlBqB,MAJf,WACE,OAAO,kBAAC,EAAD,OCKWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,sCErInBC,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.459028db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m12\">\r\n                        <div className=\"card horizontal z-depth-5\" id=\"horizontal\">\r\n                            <div className=\"card-image\">\r\n                                <img src=\"https://jeff-paul-greco.github.io/portfolio/assets/images/pic.png\" id=\"profile-pic\" alt=\"pic\"></img>\r\n                                    <span className=\"card-title\" id=\"pic-text\">About Me</span>\r\n                            </div>\r\n                                <div className=\"card-content\">\r\n                                    <p>Full Stack Web Developer with a certificate from the University of\r\n                                        North Carolina Charlotte. I am skilled in using Javascript/ES6,\r\n                                        React.js, MongoDB/Mongoose, MySQL/Sequelize, Express.js, Html and CSS.\r\n                                        I also have experience with various CSS libraries including Bootstrap,\r\n                                        Materialize and CSS Grid. I am a well rounded developer with a strong\r\n                                        focus on having an intuitive and efficient user experience. I find my\r\n                                        approach to parsing and assimilating new knowledge as well as my ability\r\n                                        to work well with people of all different personalities to be amongst my\r\n                                        greatest assets. I look forward to growing with a company and getting\r\n                                new opportunities to improve my abilities. </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                );\r\n            }\r\n        }\r\n        \r\nexport default About;","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <h1>Contact</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\n\r\nclass Portfolio extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <h1>Portfolio</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\";\r\nimport Resume from \"../GrecoResume.pdf\";\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n\r\n        <div className=\"navbar-fixed\">\r\n            <ul id=\"dropdown1\" className=\"dropdown-content\">\r\n                <li><a name=\"about\" className=\"waves-effect waves-purple white-text\">About Me</a></li>\r\n                <li className=\"divider\"></li>\r\n                <li><a name=\"portfolio\" className=\"waves-effect waves-purple white-text\">Portfolio</a></li>\r\n                <li className=\"divider\"></li>\r\n                <li><a name=\"contact\" className=\"waves-effect waves-purple white-text\">Contact</a></li>\r\n                <li className=\"divider\"></li>\r\n                <li><a name=\"resume\"\r\n                    className=\"waves-effect waves-purple white-text\" target=\"_blank\">Resume</a></li>\r\n            </ul>\r\n            <nav>\r\n                <div className=\"nav-wrapper black z-depth-3\">\r\n                    <a className=\"brand-logo center\" id=\"nav-logo\">Jeff Greco</a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\">Menu<i\r\n                            className=\"material-icons right\">arrow_drop_down</i></a></li>\r\n                    </ul>\r\n                    <ul className=\"right hide-on-large-only\">\r\n                        <li><a href=\"#\" onClick={() => props.handlePageChange(\"Portfolio\")}>Portfolio</a></li>\r\n                        <li><a href=\"#\" onClick={() => props.handlePageChange(\"Contact\")}>Contact</a></li>\r\n                        <li><a href={Resume} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Portfolio from \"./pages/Portfolio\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass PortfolioContainer extends Component {\r\n    state = {\r\n      currentPage: \"\"\r\n    };\r\n\r\n    componentDidMount = () => this.setState({ currentPage: \"About\" });\r\n  \r\n    handlePageChange = page => {\r\n      this.setState({ currentPage: page });\r\n    };\r\n  \r\n    renderPage = () => {\r\n      if (this.state.currentPage === \"About\") {\r\n        return <About />;\r\n      } else if (this.state.currentPage === \"Portfolio\") {\r\n        return <Portfolio />;\r\n      } else if (this.state.currentPage === \"Contact\") {\r\n        return <Contact />;\r\n      } \r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Navbar\r\n          handlePageChange={this.handlePageChange}\r\n          />\r\n          {this.renderPage()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default PortfolioContainer;","\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\nimport './index.css';\n\nfunction App() {\n  return <PortfolioContainer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/GrecoResume.34f3a7bb.pdf\";"],"sourceRoot":""}